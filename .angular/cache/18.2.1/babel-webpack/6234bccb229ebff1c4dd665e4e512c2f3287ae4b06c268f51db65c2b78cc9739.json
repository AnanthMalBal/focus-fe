{"ast":null,"code":"import _asyncToGenerator from \"C:/focus/focus/focus-fe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"angularx-qrcode\";\nimport * as i4 from \"../navbar/navbar.component\";\nconst _c0 = [\"qrCodeContainer\"];\nfunction CreatecodeComponent_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function CreatecodeComponent_button_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.downloadAsPDF());\n    });\n    i0.ɵɵtext(1, \"Download QR Code as PDF\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let CreatecodeComponent = /*#__PURE__*/(() => {\n  class CreatecodeComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.isQRCodeGenerated = false;\n    }\n    ngOnInit() {\n      this.QRcodeform = this.fb.group({\n        productName: ['', [Validators.required]],\n        productDetails: ['', [Validators.required]]\n      });\n    }\n    createQR() {\n      console.log(\"form\", this.QRcodeform.value);\n      this.formdata = this.QRcodeform.value;\n      this.qrCodeData = JSON.stringify({\n        name: this.formdata.productName,\n        details: this.formdata.productDetails\n      });\n      this.isQRCodeGenerated = true;\n    }\n    downloadAsPDF() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const element = _this.qrCodeContainer.nativeElement;\n        const canvas = yield html2canvas(element);\n        const imageData = canvas.toDataURL('image/png');\n        const pdf = new jsPDF();\n        const imgProps = pdf.getImageProperties(imageData);\n        const pdfWidth = pdf.internal.pageSize.getWidth();\n        const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n        pdf.addImage(imageData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n        pdf.save(`${_this.formdata.productName}-QRCode.pdf`);\n        _this.formdata.reset();\n      })();\n    }\n    static #_ = this.ɵfac = function CreatecodeComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CreatecodeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreatecodeComponent,\n      selectors: [[\"app-createcode\"]],\n      viewQuery: function CreatecodeComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.qrCodeContainer = _t.first);\n        }\n      },\n      decls: 30,\n      vars: 4,\n      consts: [[\"qrCodeContainer\", \"\"], [1, \"outer\"], [1, \"container\", \"mt-2\"], [1, \"row\", \"app-container\", \"p-2\"], [1, \"col-8\"], [1, \"panel\"], [1, \"panel-heading\"], [1, \"pt-1\", \"font-weight-bold\", 2, \"color\", \"var(--primary)\"], [1, \"panel-body\", \"p-3\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\", \"pt-0\", \"row\"], [1, \"col-lg-6\"], [2, \"color\", \"var(--primary)\"], [\"formControlName\", \"productName\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"productDetails\", \"type\", \"text\", 1, \"form-control\"], [1, \"form-group\", \"pt-4\", \"row\"], [1, \"col-lg-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-md\", 2, \"background-color\", \"var(--primary)\", \"color\", \"white\"], [1, \"col-lg-2\", \"ms-4\", 2, \"margin-left\", \"40px\"], [\"class\", \"btn btn-md\", \"style\", \"background-color:var(--primary); color: white;\", 3, \"click\", 4, \"ngIf\"], [1, \"col-4\"], [1, \"custom-qr-code\", 3, \"qrdata\", \"errorCorrectionLevel\"], [1, \"btn\", \"btn-md\", 2, \"background-color\", \"var(--primary)\", \"color\", \"white\", 3, \"click\"]],\n      template: function CreatecodeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n          i0.ɵɵelement(2, \"app-navbar\");\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h3\", 7);\n          i0.ɵɵtext(8, \" Create QR code \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 8)(10, \"form\", 9);\n          i0.ɵɵlistener(\"ngSubmit\", function CreatecodeComponent_Template_form_ngSubmit_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.createQR());\n          });\n          i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 11)(13, \"h6\", 12);\n          i0.ɵɵtext(14, \"Product Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 10)(17, \"div\", 11)(18, \"h6\", 12);\n          i0.ɵɵtext(19, \"Product Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 14);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 15)(22, \"div\", 16)(23, \"button\", 17);\n          i0.ɵɵtext(24, \"Generate QRCode\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 18);\n          i0.ɵɵtemplate(26, CreatecodeComponent_button_26_Template, 2, 0, \"button\", 19);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(27, \"div\", 20, 0);\n          i0.ɵɵelement(29, \"qrcode\", 21);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"formGroup\", ctx.QRcodeform);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngIf\", ctx.isQRCodeGenerated);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"qrdata\", ctx.qrCodeData)(\"errorCorrectionLevel\", \"M\");\n        }\n      },\n      dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.QRCodeComponent, i4.NavbarComponent],\n      styles: [\".custom-qr-code[_ngcontent-%COMP%]{width:200px;height:200px;border:10px solid var(primary);padding:10px}\"]\n    });\n  }\n  return CreatecodeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}