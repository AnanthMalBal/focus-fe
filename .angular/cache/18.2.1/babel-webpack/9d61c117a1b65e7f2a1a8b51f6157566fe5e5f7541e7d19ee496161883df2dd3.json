{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NavbarComponent = class NavbarComponent {\n  constructor(authservice) {\n    this.authservice = authservice;\n    this.menuItems = [];\n    this.nestedMenu = [];\n    this.isPopoverVisible = false;\n  }\n  ngOnInit() {\n    this.roles = localStorage.getItem('roles');\n    console.log('roles', this.roles);\n    this.getmenufromapi();\n  }\n  togglePopover() {\n    this.isPopoverVisible = !this.isPopoverVisible;\n  }\n  getmenufromapi() {\n    this.authservice.getmenu(this.roles).subscribe(result => {\n      this.menuItems = result;\n      console.log('menuresults', this.menuItems);\n      this.nestedMenu = this.buildMenu(this.menuItems);\n      console.log('nestedMenu', this.nestedMenu);\n    });\n  }\n  buildMenu(menuItems) {\n    const menuMap = new Map();\n    // Map all items by menuId\n    menuItems.forEach(item => menuMap.set(item.menuId, {\n      ...item,\n      children: []\n    }));\n    console.log('menuMap', menuMap);\n    const nestedMenu = [];\n    // Link parents with their children\n    menuItems.forEach(item => {\n      if (item.menuId !== item.parentId) {\n        const parent = menuMap.get(item.parentId);\n        if (parent) {\n          parent.children.push(menuMap.get(item.menuId));\n        }\n      } else {\n        nestedMenu.push(menuMap.get(item.menuId));\n      }\n    });\n    return nestedMenu;\n  }\n};\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})], NavbarComponent);\nexport { NavbarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}