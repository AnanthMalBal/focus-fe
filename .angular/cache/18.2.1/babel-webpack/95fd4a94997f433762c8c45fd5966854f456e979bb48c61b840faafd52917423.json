{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { LeaveModel } from '../modals/leavemodel';\nimport { environment } from '../environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let LeaveService = /*#__PURE__*/(() => {\n  class LeaveService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n    }\n    getLeaveType() {\n      console.log(\"getleaveTypa\");\n      return this.http.post(`${environment.getLeaveType}`, {}).pipe(tap(result => console.log(\"Leave Typa fetched:\", result)), catchError(error => {\n        console.error(\"Error fetching leave type:\", error);\n        return throwError(() => error);\n      }));\n    }\n    addleave(data) {\n      console.log(\"applyleavedata in service\", data);\n      return this.http.post(`${environment.applyLeave}`, data).pipe(map(result => {\n        this.applyleavedata = result;\n        console.log(result);\n        Swal.fire({\n          text: this.applyleavedata.message,\n          confirmButtonColor: '#2ecc71'\n        });\n      }));\n    }\n    getleavehistory() {\n      const currentYear = new Date().getFullYear();\n      const firstDate = new Date(currentYear, 0, 1); // January 1st\n      const lastDate = new Date(currentYear, 11, 31); // December 31st\n      console.log('First Date of the Year:', firstDate);\n      console.log('Last Date of the Year:', lastDate);\n      this.leavemodel = new LeaveModel();\n      this.leavemodel.fromDate = firstDate;\n      this.leavemodel.toDate = lastDate;\n      this.leavemodel.page = 1;\n      this.leavemodel.perPage = 10;\n      this.leavemodel.sort = \"modifiedDate desc\";\n      console.log('leavemodel to service', this.leavemodel);\n      return this.http.post(`${environment.searchLeave}`, this.leavemodel);\n    }\n    cancelLeave(leaveId) {\n      return this.http.post(`${environment.cancelLeave}`, {\n        leaveId\n      });\n    }\n    static #_ = this.ɵfac = function LeaveService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LeaveService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LeaveService,\n      factory: LeaveService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return LeaveService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}