{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { environment } from '../environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthserviceService = /*#__PURE__*/(() => {\n  class AuthserviceService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.apiData = new BehaviorSubject(null);\n      this.apiData$ = this.apiData.asObservable();\n    }\n    // http://localhost:3007/auth/auth\n    login(data) {\n      console.log(\"I am server\");\n      return this.http.post(`${environment.authUrl}`, data).pipe(map(result => {\n        console.log(result);\n        this.authresults = result;\n        this.loginData = result;\n        this.setData(this.loginData);\n        if (this.authresults.accesstoken) {\n          this.saveToken(this.authresults.accesstoken);\n          localStorage.setItem('token', this.authresults.accesstoken);\n          localStorage.setItem('userobject', this.authresults.user);\n          localStorage.setItem('roles', this.authresults.user.roles);\n          Swal.fire({\n            text: this.authresults.message,\n            confirmButtonColor: '#2ecc71'\n          });\n          this.router.navigate([\"lmscalendar\"]);\n        }\n      }));\n    }\n    getmenu(role) {\n      return this.http.post(`${environment.menuUrl}`, role);\n    }\n    setData(loginData) {\n      this.apiData.next(loginData);\n    }\n    saveToken(token) {\n      localStorage.setItem('authToken', token);\n    }\n    // Get the token from local storage\n    getToken() {\n      return localStorage.getItem('authToken');\n    }\n    // Remove token (for logout)\n    logout() {\n      localStorage.removeItem('authToken');\n    }\n    static #_ = this.ɵfac = function AuthserviceService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthserviceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthserviceService,\n      factory: AuthserviceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthserviceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}