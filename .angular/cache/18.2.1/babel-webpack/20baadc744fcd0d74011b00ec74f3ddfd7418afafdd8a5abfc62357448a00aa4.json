{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/authservice.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"*username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"*username is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 28);\n    i0.ɵɵtext(1, \"*password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 28);\n    i0.ɵɵtext(1, \"*password is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, route, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.route = route;\n      this.router = router;\n      this.isText = false;\n      this.eyeIcon = 'fa-eye-slash';\n      this.username = \"\";\n      this.password = \"\";\n      this.type = \"password\";\n      // this.isLoading$ = this.authService.isLoading$;\n      // // redirect to home if already logged in\n      // if (this.authService.currentUserValue) {\n      //   this.router.navigate(['/']);\n      // }\n    }\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        username: ['', [Validators.required, Validators.pattern(\"^[A-Za-z0-9-,@.&_]{3,15}$\")]],\n        password: ['', [Validators.required, Validators.pattern(\"^[a-zA-z0-9@.&_]{3,15}$\")]]\n      });\n    }\n    // convenience getter for easy access to form fields\n    hideShowPass() {\n      this.isText = !this.isText;\n      this.isText ? this.eyeIcon = 'fa-eye' : this.eyeIcon = 'fa-eye-slash';\n      this.isText ? this.type = 'text' : this.type = 'password';\n    }\n    loginProcess() {\n      console.log(\"form\", this.loginForm.value);\n      this.authService.login(this.loginForm.value).subscribe(results => {\n        console.log(results);\n      }, error => {\n        Swal.fire({\n          text: \"Invalid Credentials,Please check your username and password\",\n          // error.message,\n          confirmButtonColor: '#964B00',\n          background: '#efc96a'\n        });\n      });\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthserviceService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 36,\n      vars: 10,\n      consts: [[1, \"outer\"], [1, \"container\", \"mt-2\"], [1, \"row\", \"app-container\", \"p-2\"], [1, \"col-lg-10\", \"offset-md-0\", \"centerTest\"], [\"src\", \"assets/focus.jpg\", 2, \"width\", \"350px\", \"height\", \"100px\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-2\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\", 2, \"color\", \"r\"], [1, \"panel-body\", \"p-3\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", 2, \"color\", \"#964B00\"], [\"formControlName\", \"username\", \"required\", \"\", \"type\", \"text\", \"placeholder\", \"UserName\"], [\"class\", \"text-danger form-inline  mt-0\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", 2, \"color\", \"#964B00\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [2, \"color\", \"#964B00\", 3, \"click\"], [\"class\", \"text-danger form-inline \", 4, \"ngIf\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"href\", \"\\\\forgotpassword\", \"id\", \"forgot\", 2, \"color\", \"#964B00\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline\", \"btn-block\", \"mt-4\", \"w-100\", 2, \"background-color\", \"rgb(133, 187, 131)\", \"color\", \"antiquewhite\", 3, \"disabled\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forgot\", 1, \"pointer\", 2, \"color\", \"#964B00\"], [1, \"text-danger\", \"form-inline\", \"mt-0\"], [1, \"text-danger\", \"form-inline\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵelement(4, \"img\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"div\", 9)(10, \"h3\", 10);\n          i0.ɵɵtext(11, \" Login \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 11)(13, \"form\", 12);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_13_listener() {\n            return ctx.loginProcess();\n          });\n          i0.ɵɵelementStart(14, \"div\", 13)(15, \"div\", 14);\n          i0.ɵɵelement(16, \"span\", 15)(17, \"input\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, LoginComponent_small_18_Template, 2, 0, \"small\", 17)(19, LoginComponent_small_19_Template, 2, 0, \"small\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 13)(21, \"div\", 14);\n          i0.ɵɵelement(22, \"span\", 18)(23, \"input\", 19);\n          i0.ɵɵelementStart(24, \"span\", 20);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_24_listener() {\n            return ctx.hideShowPass();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(25, LoginComponent_small_25_Template, 2, 0, \"small\", 21)(26, LoginComponent_small_26_Template, 2, 0, \"small\", 21);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 22)(28, \"a\", 23);\n          i0.ɵɵtext(29, \"Forgot Password?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"button\", 24);\n          i0.ɵɵtext(31, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 25);\n          i0.ɵɵtext(33, \"Don't have an account? \");\n          i0.ɵɵelementStart(34, \"a\", 26);\n          i0.ɵɵtext(35, \"Sign up\");\n          i0.ɵɵelementEnd()()()()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"pattern\", \"username\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"type\", ctx.type);\n          i0.ɵɵadvance();\n          i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"pattern\", \"password\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".outer[_ngcontent-%COMP%]{align-items:center;margin-top:100px}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}